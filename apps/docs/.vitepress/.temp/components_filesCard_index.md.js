import { resolveComponent, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrRenderComponent } from "vue/server-renderer";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"FilesCard 文件卡片 📇","description":"","frontmatter":{},"headers":[],"relativePath":"components/filesCard/index.md","filePath":"components/filesCard/index.md","lastUpdated":1746503545000}');
const _sfc_main = { name: "components/filesCard/index.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_demo = resolveComponent("demo");
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="filescard-文件卡片-📇" tabindex="-1">FilesCard 文件卡片 📇 <a class="header-anchor" href="#filescard-文件卡片-📇" aria-label="Permalink to &quot;FilesCard 文件卡片 📇&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p><code>FilesCard</code> 组件是一个灵活的文件展示组件，支持多种文件类型（图片、文档、压缩包等）的可视化呈现，包含文件图标、名称、描述、状态等信息，同时提供丰富的自定义选项和交互功能，适用于文件管理、上传预览等场景。</p><h2 id="代码演示" tabindex="-1">代码演示 <a class="header-anchor" href="#代码演示" aria-label="Permalink to &quot;代码演示&quot;">​</a></h2><h3 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/filesCard/demos/base.vue" }, null, _parent));
  _push(`<h3 id="状态设置" tabindex="-1">状态设置 <a class="header-anchor" href="#状态设置" aria-label="Permalink to &quot;状态设置&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/filesCard/demos/status.vue" }, null, _parent));
  _push(`<h3 id="展示删除图标" tabindex="-1">展示删除图标 <a class="header-anchor" href="#展示删除图标" aria-label="Permalink to &quot;展示删除图标&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/filesCard/demos/delete-icon.vue" }, null, _parent));
  _push(`<h3 id="图片文件展示" tabindex="-1">图片文件展示 <a class="header-anchor" href="#图片文件展示" aria-label="Permalink to &quot;图片文件展示&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/filesCard/demos/image-preview.vue" }, null, _parent));
  _push(`<h3 id="自定义样式与交互" tabindex="-1">自定义样式与交互 <a class="header-anchor" href="#自定义样式与交互" aria-label="Permalink to &quot;自定义样式与交互&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/filesCard/demos/custom-style.vue" }, null, _parent));
  _push(`<h3 id="自定义内置文件颜色" tabindex="-1">自定义内置文件颜色 <a class="header-anchor" href="#自定义内置文件颜色" aria-label="Permalink to &quot;自定义内置文件颜色&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/filesCard/demos/custom-color.vue" }, null, _parent));
  _push(`<h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>是否必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>uid</code></td><td><code>string | number</code></td><td>否</td><td><code>undefined</code></td><td>文件唯一标识符</td></tr><tr><td><code>name</code></td><td><code>string</code></td><td>否</td><td><code>undefined</code></td><td>文件名（支持自动解析后缀匹配图标）</td></tr><tr><td><code>fileSize</code></td><td><code>number</code></td><td>否</td><td><code>undefined</code></td><td>文件大小（单位：字节，自动转换为易读格式）</td></tr><tr><td><code>fileType</code></td><td><code>string</code></td><td>否</td><td><code>undefined</code></td><td>文件类型（优先级高于 <code>name</code> 后缀解析，如 <code>&#39;image&#39;</code>、<code>&#39;document&#39;</code>）</td></tr><tr><td><code>description</code></td><td><code>string</code></td><td>否</td><td><code>undefined</code></td><td>描述文本（支持动态生成文件类型和大小信息）</td></tr><tr><td><code>url</code></td><td><code>string</code></td><td>否</td><td><code>undefined</code></td><td>文件访问地址（图片文件可用于预览）</td></tr><tr><td><code>thumbUrl</code></td><td><code>string</code></td><td>否</td><td><code>undefined</code></td><td>图片缩略图地址</td></tr><tr><td><code>imgFile</code></td><td><code>File | Blob</code></td><td>否</td><td><code>undefined</code></td><td>图片文件流（自动解析为预览地址，仅用于上传前临时展示）</td></tr><tr><td><code>iconSize</code></td><td><code>string</code></td><td>否</td><td><code>&#39;42px&#39;</code></td><td>图标/图片尺寸</td></tr><tr><td><code>iconColor</code></td><td><code>string</code></td><td>否</td><td><code>undefined</code></td><td>非图片文件的图标颜色（支持自定义色值）</td></tr><tr><td><code>showDelIcon</code></td><td><code>boolean</code></td><td>否</td><td><code>false</code></td><td>是否显示悬停删除图标</td></tr><tr><td><code>maxWidth</code></td><td><code>string</code></td><td>否</td><td><code>&#39;236px&#39;</code></td><td>卡片最大宽度</td></tr><tr><td><code>style</code></td><td><code>CSSProperties</code></td><td>否</td><td><code>undefined</code></td><td>卡片自定义样式</td></tr><tr><td><code>hoverStyle</code></td><td><code>CSSProperties</code></td><td>否</td><td><code>undefined</code></td><td>卡片悬停时的自定义样式</td></tr><tr><td><code>imgVariant</code></td><td><code>&#39;rectangle&#39; | &#39;square&#39;</code></td><td>否</td><td><code>&#39;rectangle&#39;</code></td><td>图片卡片形态（长方形/正方形）</td></tr><tr><td><code>imgPreview</code></td><td><code>boolean</code></td><td>否</td><td><code>true</code></td><td>是否开启图片预览功能</td></tr><tr><td><code>imgPreviewMask</code></td><td><code>boolean</code></td><td>否</td><td><code>true</code></td><td>是否显示图片预览遮罩蒙层</td></tr><tr><td><code>status</code></td><td><code>&#39;uploading&#39; | &#39;done&#39; | &#39;error&#39;</code></td><td>否</td><td><code>undefined</code></td><td>文件状态（控制进度条、错误提示等视觉反馈）</td></tr><tr><td><code>percent</code></td><td><code>number</code></td><td>否</td><td><code>0</code></td><td>上传进度百分比（配合 <code>status=&quot;uploading&quot;</code> 使用）</td></tr><tr><td><code>errorTip</code></td><td><code>string</code></td><td>否</td><td><code>&#39;上传失败&#39;</code></td><td>错误状态自定义提示文本</td></tr></tbody></table><h2 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h2><table tabindex="0"><thead><tr><th>插槽名</th><th>插槽参数</th><th>描述</th></tr></thead><tbody><tr><td><code>#icon</code></td><td><code>{ item: FilesCardProps }</code></td><td>自定义图标区域（优先级高于自动解析的内置图标）</td></tr><tr><td><code>#content</code></td><td><code>{ item: FilesCardProps }</code></td><td>自定义内容区域（覆盖默认的名称和描述展示）</td></tr><tr><td><code>#name-prefix</code></td><td><code>{ item: FilesCardProps, prefix, suffix }</code></td><td>文件名前缀自定义（用于截断显示场景）</td></tr><tr><td><code>#name-suffix</code></td><td><code>{ item: FilesCardProps, prefix, suffix }</code></td><td>文件名后缀自定义（用于截断显示场景）</td></tr><tr><td><code>#description</code></td><td><code>{ item: FilesCardProps, prefix, suffix }</code></td><td>描述文本自定义（覆盖默认生成的描述）</td></tr><tr><td><code>#image-preview-actions</code></td><td><code>{ item: FilesCardProps, prefix, suffix }</code></td><td>图片预览遮罩层内容（悬停时显示，需配合 <code>imgPreviewMask</code> 使用）</td></tr><tr><td><code>#del-icon</code></td><td><code>{ item: FilesCardProps }</code></td><td>自定义删除图标（默认使用 Element Plus 的 <code>CircleCloseFilled</code> 图标）</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><table tabindex="0"><thead><tr><th>事件名</th><th>回调参数</th><th>描述</th></tr></thead><tbody><tr><td><code>delete</code></td><td><code>{ ...props }</code></td><td>删除按钮点击时触发，传递当前卡片的完整属性</td></tr><tr><td><code>image-preview</code></td><td><code>{ ...props }</code></td><td>图片预览功能触发时调用（点击图片或遮罩层）</td></tr></tbody></table><h2 id="功能特性" tabindex="-1">功能特性 <a class="header-anchor" href="#功能特性" aria-label="Permalink to &quot;功能特性&quot;">​</a></h2><p><strong>文件类型自动识别</strong></p><ul><li>根据文件名后缀自动匹配内置图标（支持常见格式如 <code>.pdf</code>、<code>.png</code>、<code>.zip</code> 等），无匹配时显示通用文件图标。</li></ul><p><strong>多状态可视化</strong></p><ul><li>支持 <code>uploading</code>（上传中，带进度条）、<code>done</code>（完成）、<code>error</code>（失败，带自定义提示）三种状态，状态样式自动切换。</li></ul><p><strong>图片文件增强支持</strong></p><ul><li>支持图片预览功能（基于 Element Plus 图片预览组件），提供正方形/长方形变体，支持通过 <code>imgFile</code> 直接解析本地图片文件流。</li></ul><p><strong>高度可定制化</strong></p><ul><li>自定义图标颜色、尺寸、卡片样式及悬停效果，通过插槽灵活扩展内容（如文件名截断显示、状态覆盖层）。</li></ul><p><strong>响应式设计</strong></p><ul><li>支持通过 <code>maxWidth</code> 控制卡片最大宽度，适配不同布局场景，文件描述自动截断防止溢出。</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/filesCard/index.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const index = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  index as default
};
