import { resolveComponent, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrRenderComponent } from "vue/server-renderer";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Attachments 附件上传组件 📪️","description":"","frontmatter":{},"headers":[],"relativePath":"components/attachments/index.md","filePath":"components/attachments/index.md","lastUpdated":null}');
const _sfc_main = { name: "components/attachments/index.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_demo = resolveComponent("demo");
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="attachments-附件上传组件-📪️" tabindex="-1">Attachments 附件上传组件 📪️ <a class="header-anchor" href="#attachments-附件上传组件-📪️" aria-label="Permalink to &quot;Attachments 附件上传组件 📪️&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p><code>Attachments</code> 组件是一个功能丰富的附件管理组件，支持文件列表展示、上传、拖拽交互、滚动浏览等功能，适用于需要处理多文件上传和展示的场景（如表单附件、文件管理界面）。组件内置文件上传按钮、拖拽提示区域，并提供灵活的自定义插槽和样式配置</p><h2 id="代码演示" tabindex="-1">代码演示 <a class="header-anchor" href="#代码演示" aria-label="Permalink to &quot;代码演示&quot;">​</a></h2><h3 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/attachments/demos/base.vue" }, null, _parent));
  _push(`<h3 id="滚动模式" tabindex="-1">滚动模式 <a class="header-anchor" href="#滚动模式" aria-label="Permalink to &quot;滚动模式&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/attachments/demos/scroll-mode.vue" }, null, _parent));
  _push(`<h3 id="自定义文件列表" tabindex="-1">自定义文件列表 <a class="header-anchor" href="#自定义文件列表" aria-label="Permalink to &quot;自定义文件列表&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/attachments/demos/custom-list.vue" }, null, _parent));
  _push(`<h3 id="拖拽上传" tabindex="-1">拖拽上传 <a class="header-anchor" href="#拖拽上传" aria-label="Permalink to &quot;拖拽上传&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/attachments/demos/drag-upload.vue" }, null, _parent));
  _push(`<h3 id="自定义滚动按钮" tabindex="-1">自定义滚动按钮 <a class="header-anchor" href="#自定义滚动按钮" aria-label="Permalink to &quot;自定义滚动按钮&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/attachments/demos/custom-scroll-buttons.vue" }, null, _parent));
  _push(`<h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>是否必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>items</code></td><td><code>FilesCardProps[]</code></td><td>否</td><td><code>[]</code></td><td>文件列表数据（包含文件基础信息，如名称、类型、状态等）</td></tr><tr><td><code>overflow</code></td><td><code>&#39;scrollX&#39; | &#39;scrollY&#39; | &#39;wrap&#39;</code></td><td>否</td><td><code>&#39;scrollX&#39;</code></td><td>滚动布局模式（横向滚动/纵向滚动/自动换行）</td></tr><tr><td><code>listStyle</code></td><td><code>CSSProperties</code></td><td>否</td><td><code>{}</code></td><td>列表容器自定义样式</td></tr><tr><td><code>uploadIconSize</code></td><td><code>string</code></td><td>否</td><td><code>&#39;64px&#39;</code></td><td>上传按钮图标尺寸</td></tr><tr><td><code>dragTarget</code></td><td><code>string | Ref&lt;HTMLElement&gt; | null</code></td><td>否</td><td><code>null</code></td><td>拖拽目标元素（支持选择器字符串或 DOM 引用，默认使用组件自身）</td></tr><tr><td><code>hideUpload</code></td><td><code>boolean</code></td><td>否</td><td><code>false</code></td><td>是否隐藏默认上传按钮</td></tr><tr><td><code>limit</code></td><td><code>number</code></td><td>否</td><td><code>undefined</code></td><td>文件数量限制（超过时隐藏上传按钮）</td></tr><tr><td><code>beforeUpload</code></td><td><code>(file: File) =&gt; boolean</code></td><td>否</td><td><code>undefined</code></td><td>上传前校验函数（返回 <code>false</code> 可阻止上传）</td></tr><tr><td><code>httpRequest</code></td><td><code>(options: { file: File }) =&gt; Promise&lt;void&gt;</code></td><td>否</td><td><code>undefined</code></td><td>自定义上传请求函数（需返回 Promise）</td></tr></tbody></table><h2 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h2><table tabindex="0"><thead><tr><th>插槽名</th><th>插槽参数</th><th>描述</th></tr></thead><tbody><tr><td><code>#file-list</code></td><td><code>{ items: FilesCardProps[] }</code></td><td>自定义文件列表内容（覆盖默认的 <code>FilesCard</code> 展示）</td></tr><tr><td><code>#prev-button</code></td><td><code>{ show: boolean, onScrollLeft: () =&gt; void }</code></td><td>自定义左侧滚动按钮（<code>scrollX</code> 模式生效），<code>show</code> 控制按钮显示状态</td></tr><tr><td><code>#next-button</code></td><td><code>{ show: boolean, onScrollRight: () =&gt; void }</code></td><td>自定义右侧滚动按钮（<code>scrollX</code> 模式生效），<code>show</code> 控制按钮显示状态</td></tr><tr><td><code>#empty-upload</code></td><td><code>-</code></td><td>空文件列表时的上传区域自定义（默认显示带加号的上传按钮）</td></tr><tr><td><code>#no-empty-upload</code></td><td><code>-</code></td><td>非空文件列表时的上传占位符自定义（默认显示带加号的上传按钮）</td></tr><tr><td><code>#drop-area</code></td><td><code>-</code></td><td>拖拽上传时的遮罩层内容自定义（默认显示上传提示图标和文本）</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><table tabindex="0"><thead><tr><th>事件名</th><th>回调参数</th><th>描述</th></tr></thead><tbody><tr><td><code>uploadChange</code></td><td><code>(file: File, fileList: FileListProps)</code></td><td>文件选择变化时触发（包含选中文件和当前文件列表）</td></tr><tr><td><code>uploadSuccess</code></td><td><code>(response: any, file: File, fileList: FileListProps)</code></td><td>文件上传成功时触发（返回接口响应、当前文件及文件列表）</td></tr><tr><td><code>uploadError</code></td><td><code>(error: any, file: File, fileList: FileListProps)</code></td><td>文件上传失败时触发（返回错误信息、当前文件及文件列表）</td></tr><tr><td><code>uploadDrop</code></td><td><code>(files: File[], props: FileListProps)</code></td><td>拖拽文件释放时触发（包含拖拽文件数组和组件属性）</td></tr><tr><td><code>deleteCard</code></td><td><code>(item: FilesCardProps, index: number)</code></td><td>文件卡片删除按钮点击时触发（返回被删除文件信息及索引）</td></tr></tbody></table><h2 id="功能特性" tabindex="-1">功能特性 <a class="header-anchor" href="#功能特性" aria-label="Permalink to &quot;功能特性&quot;">​</a></h2><p><strong>多布局模式</strong></p><ul><li>支持 <code>scrollX</code>（横向滚动）、<code>scrollY</code>（纵向滚动）、<code>wrap</code>（自动换行）三种布局，适配不同屏幕空间和文件数量。</li></ul><p><strong>拖拽上传交互</strong></p><ul><li>内置拖拽目标区域（可自定义 <code>dragTarget</code>），拖拽时显示半透明遮罩层提示，支持文件夹过滤和文件类型校验。</li></ul><p><strong>高度可定制化</strong></p><ul><li>通过 <code>#file-list</code> 插槽完全自定义文件列表展示（如替换为自定义卡片组件），支持自定义滚动按钮、上传按钮样式。</li></ul><p><strong>文件状态管理</strong></p><ul><li>配合 <code>FilesCard</code> 组件，支持文件上传中（进度条）、完成、失败等状态可视化，自动同步文件列表更新。</li></ul><p><strong>响应式设计</strong></p><ul><li>滚动时自动隐藏浏览器原生滚动条，通过 CSS 变量 <code>--elx-attachments-upload-icon-size</code> 控制上传按钮尺寸，适配不同屏幕分辨率。</li></ul></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/attachments/index.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const index = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  index as default
};
