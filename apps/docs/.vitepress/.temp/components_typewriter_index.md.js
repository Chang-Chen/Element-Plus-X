import { resolveComponent, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrRenderComponent } from "vue/server-renderer";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"Typewriter 打字器 ✍","description":"","frontmatter":{},"headers":[],"relativePath":"components/typewriter/index.md","filePath":"components/typewriter/index.md","lastUpdated":1746503545000}');
const _sfc_main = { name: "components/typewriter/index.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_demo = resolveComponent("demo");
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="typewriter-打字器-✍" tabindex="-1">Typewriter 打字器 ✍ <a class="header-anchor" href="#typewriter-打字器-✍" aria-label="Permalink to &quot;Typewriter 打字器 ✍&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">📌 注意</p><p><code>v1.2.0 版本</code> 解决 <strong>样式覆盖</strong> 、<strong>渲染图表</strong> 以及 <strong>自定义代码高亮样式、自定义插件</strong> 问题</p><p>一、我们在组件库新增了 <code>prismjs</code> 官方的 css 样式文件，可以在项目直接引入，解决 <strong>md 代码块高亮</strong>问题。</p><p>二、我们在组件库新增了 <code>Mermaid.js</code>。用于解决 <code>mermai 格式</code> 简单的<strong>图表</strong>渲染问题。</p><p>三、我们把 <code>markdown-it</code> 内置的 <strong>代码高亮方法</strong> 和 <strong>插件</strong> 暴露出来。方便开发者更好的集成第三方生态的 <strong>样式</strong> 和 <strong>插件</strong></p><p>🐵 此温馨提示更新时间：<code>2025-05-06</code></p></div><div class="info custom-block"><p class="custom-block-title">💌 消息</p><p><code>v1.1.6 版本</code> 支持雾化效果。请及时更新尝试</p><p>此消息更新时间：<code>2025-04-13</code></p></div><div class="danger custom-block"><p class="custom-block-title">💔 危险</p><p><code>v1.0.81 版本</code> ，以及更早版本。在流式输出的情况下，存在一定的性能问题。</p><p>在新版本中已修复，请及时升级至最新版本，以获得更好的体验。</p><p>此警告更新时间：<code>2025-04-06</code></p></div><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p><code>Typewriter</code> 是一个可高度定制化开发的 <code>打字器组件</code>，灵感来自 <code>ant-design-x</code> 官方 <code>气泡组件</code> 案例，将打字方法剥离出来。支持 Markdown 渲染 和 动态打字效果。</p><div class="info custom-block"><p class="custom-block-title">💌 消息</p><p>🐱 打字器组件会在组件的生命周期中会自动销毁，不用担心内存泄漏，请放心使用。</p></div><h2 id="代码演示" tabindex="-1">代码演示 <a class="header-anchor" href="#代码演示" aria-label="Permalink to &quot;代码演示&quot;">​</a></h2><h3 id="基本使用" tabindex="-1">基本使用 <a class="header-anchor" href="#基本使用" aria-label="Permalink to &quot;基本使用&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/typewriter/demos/content.vue" }, null, _parent));
  _push(`<h3 id="markdown-渲染" tabindex="-1">Markdown 渲染 <a class="header-anchor" href="#markdown-渲染" aria-label="Permalink to &quot;Markdown 渲染&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/typewriter/demos/isMarkdown.vue" }, null, _parent));
  _push(`<h3 id="md-代码块高亮-v1-2-0-新增" tabindex="-1">MD-代码块高亮（v1.2.0 新增） <a class="header-anchor" href="#md-代码块高亮-v1-2-0-新增" aria-label="Permalink to &quot;MD-代码块高亮（v1.2.0 新增）&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/typewriter/demos/newMaekDown.vue" }, null, _parent));
  _push(`<h3 id="md-图表-v1-2-0-新增" tabindex="-1">MD-图表（v1.2.0 新增） <a class="header-anchor" href="#md-图表-v1-2-0-新增" aria-label="Permalink to &quot;MD-图表（v1.2.0 新增）&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/typewriter/demos/mermaid.vue" }, null, _parent));
  _push(`<h3 id="开启打字效果" tabindex="-1">开启打字效果 <a class="header-anchor" href="#开启打字效果" aria-label="Permalink to &quot;开启打字效果&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/typewriter/demos/typing.vue" }, null, _parent));
  _push(`<h3 id="打字器雾化效果" tabindex="-1">打字器雾化效果 <a class="header-anchor" href="#打字器雾化效果" aria-label="Permalink to &quot;打字器雾化效果&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/typewriter/demos/isFog.vue" }, null, _parent));
  _push(`<h3 id="动态更新内容-流式有用" tabindex="-1">动态更新内容 (流式有用) <a class="header-anchor" href="#动态更新内容-流式有用" aria-label="Permalink to &quot;动态更新内容 (流式有用)&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/typewriter/demos/updates.vue" }, null, _parent));
  _push(`<h3 id="控制打字" tabindex="-1">控制打字 <a class="header-anchor" href="#控制打字" aria-label="Permalink to &quot;控制打字&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/typewriter/demos/customized.vue" }, null, _parent));
  _push(`<h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>是否必填</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>content</code></td><td>String</td><td>否</td><td><code>&#39;&#39;</code></td><td>要展示的文本内容，支持纯文本或 Markdown 格式。</td></tr><tr><td><code>isMarkdown</code></td><td>Boolean</td><td>否</td><td><code>false</code></td><td>是否启用 Markdown 渲染模式。</td></tr><tr><td><code>typing</code></td><td>Boolean | <code>{ step?: number, interval?: number, suffix?: string }</code></td><td>否</td><td><code>false</code></td><td>是否启用打字机效果。</td></tr><tr><td><code>typing.step</code></td><td>Number</td><td>否</td><td><code>2</code></td><td>每次打字吐多少字符。</td></tr><tr><td><code>typing.interval</code></td><td>Number</td><td>否</td><td><code>50</code></td><td>每次打字的间隔时间 单位( <code>ms</code> )。</td></tr><tr><td><code>typing.suffix</code></td><td>String</td><td>否</td><td><code>&#39;|&#39;</code></td><td>打字器后缀光标字符（仅在非 Markdown 模式下生效）。</td></tr><tr><td><code>isFog</code></td><td>Boolean | <code>{ bgColor?: string, width?: string }</code></td><td>否</td><td><code>false</code></td><td>是否启用雾化效果，可以设置背景色和宽度。</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><table tabindex="0"><thead><tr><th>事件名</th><th>参数</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>@start</code></td><td><code>ref</code> 实例</td><td>Function</td><td>当打字效果开始时触发</td></tr><tr><td><code>@finish</code></td><td><code>ref</code> 实例</td><td>Function</td><td>当打字效果完成时触发</td></tr><tr><td><code>@writing</code></td><td><code>ref</code> 实例</td><td>Function</td><td>当打字效果进行中不断触发</td></tr></tbody></table><h2 id="ref-实例方法" tabindex="-1">Ref 实例方法 <a class="header-anchor" href="#ref-实例方法" aria-label="Permalink to &quot;Ref 实例方法&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性名</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><code>interrupt</code></td><td>Function</td><td>中断打字。</td></tr><tr><td><code>continue</code></td><td>Function</td><td>继续未完成的打字。</td></tr><tr><td><code>restart</code></td><td>Function</td><td>重新开始打字。</td></tr><tr><td><code>destroy</code></td><td>Function</td><td>主动销毁打字组件。</td></tr><tr><td><code>renderedContent</code></td><td>String</td><td>获取打字组件渲染的内容。</td></tr><tr><td><code>isTyping</code></td><td>Boolean</td><td>是否正在打字。</td></tr><tr><td><code>progress</code></td><td>Number</td><td>打字进度，取值范围 0 - 100。</td></tr></tbody></table><h2 id="功能特性" tabindex="-1">功能特性 <a class="header-anchor" href="#功能特性" aria-label="Permalink to &quot;功能特性&quot;">​</a></h2><ol><li><strong>Markdown 支持</strong>：支持渲染 Markdown 格式的文本，并应用 GitHub 风格的样式。</li><li><strong>动态打字效果</strong>：可以模拟打字机的效果，逐步显示文本内容。</li><li><strong>代码高亮</strong>：内置 Prism.js，支持代码块的语法高亮。</li><li><strong>XSS 安全</strong>：使用 DOMPurify 对 HTML 内容进行过滤，防止 XSS 攻击。</li><li><strong>灵活配置</strong>：支持自定义打字速度、光标字符、后缀等参数。</li><li><strong>定制化开发</strong>：支持更据组件打字的状态做定制化开发。</li></ol></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/typewriter/index.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const index = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  index as default
};
