import { resolveComponent, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrRenderComponent } from "vue/server-renderer";
import { _ as _export_sfc } from "./plugin-vue_export-helper.1tPrXgE0.js";
const __pageData = JSON.parse('{"title":"ThoughtChain 思维链 🔗","description":"","frontmatter":{},"headers":[],"relativePath":"components/thoughtChain/index.md","filePath":"components/thoughtChain/index.md","lastUpdated":1745920435000}');
const _sfc_main = { name: "components/thoughtChain/index.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_demo = resolveComponent("demo");
  _push(`<div${ssrRenderAttrs(_attrs)}><h1 id="thoughtchain-思维链-🔗" tabindex="-1">ThoughtChain 思维链 🔗 <a class="header-anchor" href="#thoughtchain-思维链-🔗" aria-label="Permalink to &quot;ThoughtChain 思维链 🔗&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p><code>ThoughtChain</code> 是一个用于展示AI思考过程的时间轴组件，支持 <strong>状态管理</strong>、<strong>内容展开/收起</strong> 和 <strong>动态样式配置</strong>。通过可视化的思考步骤序列，帮助用户直观理解复杂逻辑流程。组件内置多种状态反馈、过渡动画和扩展插槽，适用于智能对话、数据分析、流程引导等场景。</p><h2 id="代码示例" tabindex="-1">代码示例 <a class="header-anchor" href="#代码示例" aria-label="Permalink to &quot;代码示例&quot;">​</a></h2><h3 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/thoughtChain/demos/base.vue" }, null, _parent));
  _push(`<h3 id="尺寸大小控制" tabindex="-1">尺寸大小控制 <a class="header-anchor" href="#尺寸大小控制" aria-label="Permalink to &quot;尺寸大小控制&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/thoughtChain/demos/dot-size.vue" }, null, _parent));
  _push(`<h3 id="最大宽度控制" tabindex="-1">最大宽度控制 <a class="header-anchor" href="#最大宽度控制" aria-label="Permalink to &quot;最大宽度控制&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/thoughtChain/demos/max-width.vue" }, null, _parent));
  _push(`<h3 id="自定义标题和内容" tabindex="-1">自定义标题和内容 <a class="header-anchor" href="#自定义标题和内容" aria-label="Permalink to &quot;自定义标题和内容&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/thoughtChain/demos/key-label.vue" }, null, _parent));
  _push(`<h3 id="扩展插槽" tabindex="-1">扩展插槽 <a class="header-anchor" href="#扩展插槽" aria-label="Permalink to &quot;扩展插槽&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/thoughtChain/demos/solt.vue" }, null, _parent));
  _push(`<h3 id="手动控制展开状态" tabindex="-1">手动控制展开状态 <a class="header-anchor" href="#手动控制展开状态" aria-label="Permalink to &quot;手动控制展开状态&quot;">​</a></h3>`);
  _push(ssrRenderComponent(_component_demo, { src: "components/thoughtChain/demos/handle-expand.vue" }, null, _parent));
  _push(`<h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><ul><li><strong>组件属性</strong></li></ul><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>thinkingItems</code></td><td><code>Array&lt;ThoughtChainItemBase&gt;</code></td><td>[]</td><td>思考项数组</td></tr><tr><td><code>dotSize</code></td><td>&#39;small&#39;/&#39;default&#39;/&#39;large&#39;</td><td>&#39;default&#39;</td><td>时间轴点大小</td></tr><tr><td><code>maxWidth</code></td><td>string</td><td>&#39;600px&#39;</td><td>最大宽度</td></tr><tr><td><code>lineGradient</code></td><td>boolean</td><td>false</td><td>是否启用线条颜色渐变</td></tr><tr><td><code>rowKey</code></td><td>string</td><td>&#39;id&#39;</td><td>数据项唯一标识字段</td></tr><tr><td><code>titleKey</code></td><td>string</td><td>&#39;title&#39;</td><td>标题字段名</td></tr><tr><td><code>thinkTitleKey</code></td><td>string</td><td>&#39;thinkTitle&#39;</td><td>思考标题字段名</td></tr><tr><td><code>thinkContentKey</code></td><td>string</td><td>&#39;thinkContent&#39;</td><td>思考内容字段名</td></tr></tbody></table><ul><li><strong>ThoughtChainItemBase</strong> 数组子项的类型定义</li></ul><table tabindex="0"><thead><tr><th>参数名</th><th>类型</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td><code>id</code></td><td><code>string | number</code></td><td><strong>必填</strong></td><td>节点唯一标识</td></tr><tr><td><code>title</code></td><td><code>string</code></td><td><code>undefined</code></td><td>主标题</td></tr><tr><td><code>thinkTitle</code></td><td><code>string</code></td><td><code>undefined</code></td><td>折叠面板标题（思考标题）</td></tr><tr><td><code>thinkContent</code></td><td><code>string</code></td><td><code>undefined</code></td><td>展开时显示的详细内容</td></tr><tr><td><code>status</code></td><td><code>&#39;loading&#39; | &#39;error&#39; | &#39;success&#39;</code></td><td><code>undefined</code></td><td>节点状态标识（影响图标和颜色）</td></tr><tr><td><code>isCanExpand</code></td><td><code>boolean</code></td><td><code>undefined</code></td><td>是否允许展开节点内容</td></tr><tr><td><code>isDefaultExpand</code></td><td><code>boolean</code></td><td><code>undefined</code></td><td>是否默认展开节点内容</td></tr><tr><td><code>isMarkdown</code></td><td><code>boolean</code></td><td><code>undefined</code></td><td>是否启用Markdown格式渲染</td></tr><tr><td><code>typing</code></td><td><code>TypingConfig</code></td><td><code>undefined</code></td><td>打字机效果配置（同打字器组件）</td></tr></tbody></table><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><table tabindex="0"><thead><tr><th>事件名</th><th>参数类型</th><th>说明</th></tr></thead><tbody><tr><td><code>handleExpand</code></td><td><code>item: ThoughtChainItemProps&lt;T&gt;</code></td><td>展开状态变化时触发</td></tr></tbody></table><h2 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h2><table tabindex="0"><thead><tr><th>插槽名</th><th>作用域参数</th><th>说明</th></tr></thead><tbody><tr><td><code>#icon</code></td><td>{ item }</td><td>自定义时间轴点图标</td></tr></tbody></table><h2 id="核心特性" tabindex="-1">核心特性 <a class="header-anchor" href="#核心特性" aria-label="Permalink to &quot;核心特性&quot;">​</a></h2><ol><li><p><strong>多状态可视化</strong></p><ul><li>支持<code>loading</code>/<code>success</code>/<code>error</code></li><li>自动切换加载动画、图标和颜色反馈</li></ul></li><li><p><strong>动态内容管理</strong></p><ul><li>支持内容折叠展开（可配置默认展开项）</li><li>内置打字机效果（Typewriter组件）</li><li>支持Markdown格式渲染</li></ul></li><li><p><strong>灵活样式配置</strong></p><ul><li>自定义时间轴宽度、点大小</li><li>动态颜色渐变线条</li><li>CSS变量主题覆盖</li></ul></li><li><p><strong>响应式交互</strong></p><ul><li>平滑的过渡动画</li><li>支持动态增删思考项</li><li>展开状态双向绑定</li></ul></li></ol></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/thoughtChain/index.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const index = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  index as default
};
